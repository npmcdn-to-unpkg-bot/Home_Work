'use strict';

$(document).ready(function () {
    var database = {
        questions: [{
            title: 'Вопрос №1',
            radioname: 'one',
            id: ['1', '2', '3'],
            answers: ['Вариант ответа №1', 'Вариант ответа №2', 'Вариант ответа №3'],
            correct: 1
        }, {
            title: 'Вопрос №2',
            radioname: 'two',
            id: ['1', '2', '3'],
            answers: ['Вариант ответа №1', 'Вариант ответа №2', 'Вариант ответа №3'],
            correct: 2
        }, {
            title: 'Вопрос №3',
            radioname: 'three',
            id: ['1', '2', '3'],
            answers: ['Вариант ответа №1', 'Вариант ответа №2', 'Вариант ответа №3'],
            correct: 3
        }]
    };

    localStorage.setItem('test', JSON.stringify(database));

    var data = JSON.parse(localStorage.getItem('test'));

    var html = $('#test').html();
    var content = tmpl(html, data);
    $('body').append(content);

    function showModal(e) {
        e.preventDefault();

        var modal = $('<div class="modal"></div>');
        var result = 0;
        var answer = $('input:checked');
        var correct = [];

        for (var i = 0; i < data.questions.length; i++) {
            correct[i] = data.questions[i].correct;
            if ($(answer[i]).attr('id') == correct[i]) {
                result += 1;
                modal.append('<p class="correct">Ответ на ' + (i + 1) + ' вопрос правильный</p>');
            } else {
                modal.append('<p class="incorrect">Ответ на ' + (i + 1) + ' вопрос неправильный</p>');
            }
        }

        modal.append('<button>Закрыть и начать заново</button>');
        $('body').append(modal);

        $('button').one('click', function (e) {
            e.preventDefault();
            modal.detach();
            $('input').attr('checked', false);
        });
    }

    $('button').on('click', showModal);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxFQUFFLFFBQUYsRUFBWSxLQUFaLENBQWtCLFlBQU07QUFDcEIsUUFBSSxXQUFXO0FBQ1gsbUJBQVcsQ0FDUDtBQUNJLG1CQUFPLFdBRFg7QUFFSSx1QkFBVyxLQUZmO0FBR0ksZ0JBQUksQ0FBQyxHQUFELEVBQU0sR0FBTixFQUFXLEdBQVgsQ0FIUjtBQUlJLHFCQUFTLENBQUMsbUJBQUQsRUFBc0IsbUJBQXRCLEVBQTJDLG1CQUEzQyxDQUpiO0FBS0kscUJBQVM7QUFMYixTQURPLEVBUVA7QUFDSSxtQkFBTyxXQURYO0FBRUksdUJBQVcsS0FGZjtBQUdJLGdCQUFJLENBQUMsR0FBRCxFQUFNLEdBQU4sRUFBVyxHQUFYLENBSFI7QUFJSSxxQkFBUyxDQUFDLG1CQUFELEVBQXNCLG1CQUF0QixFQUEyQyxtQkFBM0MsQ0FKYjtBQUtJLHFCQUFTO0FBTGIsU0FSTyxFQWVQO0FBQ0ksbUJBQU8sV0FEWDtBQUVJLHVCQUFXLE9BRmY7QUFHSSxnQkFBSSxDQUFDLEdBQUQsRUFBTSxHQUFOLEVBQVcsR0FBWCxDQUhSO0FBSUkscUJBQVMsQ0FBQyxtQkFBRCxFQUFzQixtQkFBdEIsRUFBMkMsbUJBQTNDLENBSmI7QUFLSSxxQkFBUztBQUxiLFNBZk87QUFEQSxLQUFmOztBQTBCQSxpQkFBYSxPQUFiLENBQXFCLE1BQXJCLEVBQTZCLEtBQUssU0FBTCxDQUFlLFFBQWYsQ0FBN0I7O0FBRUEsUUFBSSxPQUFPLEtBQUssS0FBTCxDQUFXLGFBQWEsT0FBYixDQUFxQixNQUFyQixDQUFYLENBQVg7O0FBRUEsUUFBSSxPQUFPLEVBQUUsT0FBRixFQUFXLElBQVgsRUFBWDtBQUNBLFFBQUksVUFBVSxLQUFLLElBQUwsRUFBVyxJQUFYLENBQWQ7QUFDQSxNQUFFLE1BQUYsRUFBVSxNQUFWLENBQWlCLE9BQWpCOztBQUdBLGFBQVMsU0FBVCxDQUFtQixDQUFuQixFQUFzQjtBQUNsQixVQUFFLGNBQUY7O0FBRUEsWUFBSSxRQUFRLEVBQUUsMkJBQUYsQ0FBWjtBQUNBLFlBQUksU0FBUyxDQUFiO0FBQ0EsWUFBSSxTQUFTLEVBQUUsZUFBRixDQUFiO0FBQ0EsWUFBSSxVQUFVLEVBQWQ7O0FBRUEsYUFBSyxJQUFJLElBQUksQ0FBYixFQUFnQixJQUFJLEtBQUssU0FBTCxDQUFlLE1BQW5DLEVBQTJDLEdBQTNDLEVBQWdEO0FBQzVDLG9CQUFRLENBQVIsSUFBYSxLQUFLLFNBQUwsQ0FBZSxDQUFmLEVBQWtCLE9BQS9CO0FBQ0EsZ0JBQUksRUFBRSxPQUFPLENBQVAsQ0FBRixFQUFhLElBQWIsQ0FBa0IsSUFBbEIsS0FBMkIsUUFBUSxDQUFSLENBQS9CLEVBQTJDO0FBQ3ZDLDBCQUFVLENBQVY7QUFDQSxzQkFBTSxNQUFOLENBQWEsa0NBQWtDLElBQUksQ0FBdEMsSUFBMkMsd0JBQXhEO0FBQ0gsYUFIRCxNQUdPO0FBQ0gsc0JBQU0sTUFBTixDQUFhLG9DQUFvQyxJQUFJLENBQXhDLElBQTZDLDBCQUExRDtBQUNIO0FBQ0o7O0FBRUQsY0FBTSxNQUFOLENBQWEsMENBQWI7QUFDQSxVQUFFLE1BQUYsRUFBVSxNQUFWLENBQWlCLEtBQWpCOztBQUVBLFVBQUUsUUFBRixFQUFZLEdBQVosQ0FBZ0IsT0FBaEIsRUFBeUIsVUFBVSxDQUFWLEVBQWE7QUFDbEMsY0FBRSxjQUFGO0FBQ0Esa0JBQU0sTUFBTjtBQUNBLGNBQUUsT0FBRixFQUFXLElBQVgsQ0FBZ0IsU0FBaEIsRUFBMkIsS0FBM0I7QUFDSCxTQUpEO0FBS0g7O0FBRUQsTUFBRSxRQUFGLEVBQVksRUFBWixDQUFlLE9BQWYsRUFBd0IsU0FBeEI7QUFFSCxDQWxFRCIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIkKGRvY3VtZW50KS5yZWFkeSgoKSA9PiB7XHJcbiAgICBsZXQgZGF0YWJhc2UgPSB7XHJcbiAgICAgICAgcXVlc3Rpb25zOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAn0JLQvtC/0YDQvtGBIOKEljEnLFxyXG4gICAgICAgICAgICAgICAgcmFkaW9uYW1lOiAnb25lJyxcclxuICAgICAgICAgICAgICAgIGlkOiBbJzEnLCAnMicsICczJ10sXHJcbiAgICAgICAgICAgICAgICBhbnN3ZXJzOiBbJ9CS0LDRgNC40LDQvdGCINC+0YLQstC10YLQsCDihJYxJywgJ9CS0LDRgNC40LDQvdGCINC+0YLQstC10YLQsCDihJYyJywgJ9CS0LDRgNC40LDQvdGCINC+0YLQstC10YLQsCDihJYzJ10sXHJcbiAgICAgICAgICAgICAgICBjb3JyZWN0OiAxXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAn0JLQvtC/0YDQvtGBIOKEljInLFxyXG4gICAgICAgICAgICAgICAgcmFkaW9uYW1lOiAndHdvJyxcclxuICAgICAgICAgICAgICAgIGlkOiBbJzEnLCAnMicsICczJ10sXHJcbiAgICAgICAgICAgICAgICBhbnN3ZXJzOiBbJ9CS0LDRgNC40LDQvdGCINC+0YLQstC10YLQsCDihJYxJywgJ9CS0LDRgNC40LDQvdGCINC+0YLQstC10YLQsCDihJYyJywgJ9CS0LDRgNC40LDQvdGCINC+0YLQstC10YLQsCDihJYzJ10sXHJcbiAgICAgICAgICAgICAgICBjb3JyZWN0OiAyXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAn0JLQvtC/0YDQvtGBIOKEljMnLFxyXG4gICAgICAgICAgICAgICAgcmFkaW9uYW1lOiAndGhyZWUnLFxyXG4gICAgICAgICAgICAgICAgaWQ6IFsnMScsICcyJywgJzMnXSxcclxuICAgICAgICAgICAgICAgIGFuc3dlcnM6IFsn0JLQsNGA0LjQsNC90YIg0L7RgtCy0LXRgtCwIOKEljEnLCAn0JLQsNGA0LjQsNC90YIg0L7RgtCy0LXRgtCwIOKEljInLCAn0JLQsNGA0LjQsNC90YIg0L7RgtCy0LXRgtCwIOKEljMnXSxcclxuICAgICAgICAgICAgICAgIGNvcnJlY3Q6IDNcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF1cclxuICAgIH07XHJcblxyXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Rlc3QnLCBKU09OLnN0cmluZ2lmeShkYXRhYmFzZSkpO1xyXG5cclxuICAgIGxldCBkYXRhID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndGVzdCcpKTtcclxuXHJcbiAgICBsZXQgaHRtbCA9ICQoJyN0ZXN0JykuaHRtbCgpO1xyXG4gICAgbGV0IGNvbnRlbnQgPSB0bXBsKGh0bWwsIGRhdGEpO1xyXG4gICAgJCgnYm9keScpLmFwcGVuZChjb250ZW50KTtcclxuXHJcblxyXG4gICAgZnVuY3Rpb24gc2hvd01vZGFsKGUpIHtcclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gICAgICAgIGxldCBtb2RhbCA9ICQoJzxkaXYgY2xhc3M9XCJtb2RhbFwiPjwvZGl2PicpO1xyXG4gICAgICAgIGxldCByZXN1bHQgPSAwO1xyXG4gICAgICAgIGxldCBhbnN3ZXIgPSAkKCdpbnB1dDpjaGVja2VkJyk7XHJcbiAgICAgICAgbGV0IGNvcnJlY3QgPSBbXTtcclxuXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhLnF1ZXN0aW9ucy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBjb3JyZWN0W2ldID0gZGF0YS5xdWVzdGlvbnNbaV0uY29ycmVjdDtcclxuICAgICAgICAgICAgaWYgKCQoYW5zd2VyW2ldKS5hdHRyKCdpZCcpID09IGNvcnJlY3RbaV0pIHtcclxuICAgICAgICAgICAgICAgIHJlc3VsdCArPSAxO1xyXG4gICAgICAgICAgICAgICAgbW9kYWwuYXBwZW5kKCc8cCBjbGFzcz1cImNvcnJlY3RcIj7QntGC0LLQtdGCINC90LAgJyArIChpICsgMSkgKyAnINCy0L7Qv9GA0L7RgSDQv9GA0LDQstC40LvRjNC90YvQuTwvcD4nKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIG1vZGFsLmFwcGVuZCgnPHAgY2xhc3M9XCJpbmNvcnJlY3RcIj7QntGC0LLQtdGCINC90LAgJyArIChpICsgMSkgKyAnINCy0L7Qv9GA0L7RgSDQvdC10L/RgNCw0LLQuNC70YzQvdGL0Lk8L3A+Jyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIG1vZGFsLmFwcGVuZCgnPGJ1dHRvbj7Ql9Cw0LrRgNGL0YLRjCDQuCDQvdCw0YfQsNGC0Ywg0LfQsNC90L7QstC+PC9idXR0b24+Jyk7XHJcbiAgICAgICAgJCgnYm9keScpLmFwcGVuZChtb2RhbCk7XHJcblxyXG4gICAgICAgICQoJ2J1dHRvbicpLm9uZSgnY2xpY2snLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIG1vZGFsLmRldGFjaCgpO1xyXG4gICAgICAgICAgICAkKCdpbnB1dCcpLmF0dHIoJ2NoZWNrZWQnLCBmYWxzZSk7XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICAkKCdidXR0b24nKS5vbignY2xpY2snLCBzaG93TW9kYWwpO1xyXG5cclxufSk7XHJcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
